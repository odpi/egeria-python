# PDX-License-Identifier: Apache-2.0
# Copyright Contributors to the ODPi Egeria project.

[project]
name = "pyegeria"
version = "5.4.8.10"
license = 'Apache-2.0'
license-files = ["LICENSE"]
authors = [{name = "Dan Wolfson", email = "dan.wolfson@pdr-associates.com"},]
readme = "README.md"
description = "A python client for Egeria"
keywords = ["egeria", "metadata", "governance"]
requires-python =">3.12"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
 ]


dependencies = [
    "httpx",
    "rich>=14.2",
    "validators",
    "urllib3",
    "requests",
    "jupyter",
    "click",
    "trogon",
    "mermaid-py",
    "psycopg2-binary>=2.9.11",
    "jupyter-notebook-parser",
    "loguru",
    "inflect",
    "pydantic >=2.12.3",
    "pydantic-settings >= 2.10.1",
    "pydevd-pycharm >=253.27642.35",
    "wcwidth",
    "altair",
    "mcp >=0.1",
    "markers>=0.3.0",
    "pytest-asyncio>=1.2.0",
]

[project.scripts]
    pyegeria-mcp = "pyegeria.mcp_server:main"
    run_report = "commands.cat.run_report:main"
    list_assets = "commands.cat.list_assets:main"
    list_tech_types = "commands.cat.list_tech_types:main"
    get_asset_graph = "commands.cat.get_asset_graph:main"
    get_collection = "commands.cat.get_collection:main"
    list_terms = "commands.cat.list_terms:main"
    get_tech_type_elements = "commands.cat.get_tech_type_elements:main"
    list_tech_type_elements = "commands.cat.list_tech_type_elements:main"
    list_projects = "commands.cat.list_projects:main"
    list_todos = "commands.cat.list_todos:main"
    list_cert_types = "commands.cat.list_cert_types:main"
    get_project_structure = "commands.cat.get_project_structure:main"
    get_project_dependencies = "commands.cat.get_project_dependencies:main"
    list_user_ids = "commands.cat.list_user_ids:main"
    list_deployed_catalogs = "commands.cat.list_deployed_catalogs:main"
    list_deployed_databases = "commands.cat.list_deployed_databases:main"
    list_deployed_schemas = "commands.cat.list_deployed_database_schemas:main"
    # CORRECTED: Removed the unnecessary '.py' from the module path
    list_deployed_servers = "commands.cat.list_deployed_servers:main"
    create_glossary = "commands.cat.glossary_actions:create_glossary"
    delete_glossary = "commands.cat.glossary_actions:delete_glossary"
    create_term = "commands.cat.glossary_actions:create_term"
    delete_term = "commands.cat.glossary_actions:delete_term"
    list_glossaries = "commands.cat.list_glossaries:main"
    load_terms_from_csv_file = "commands.cat.glossary_actions:import_terms_csv"
    export_terms_to_csv_file = "commands.cat.glossary_actions:export_terms_csv"
    list_categories = "commands.cat.list_categories:main"
    create_category = "commands.cat.glossary_actions:create_category"
    update_category = "commands.cat.glossary_actions:update_category"
    delete_category = "commands.cat.glossary_actions:delete_category"
    add_term_to_category = "commands.cat.glossary_actions:add_term_to_category"
    remove_term_from_category = "commands.cat.glossary_actions:remove_term_from_category"


    dr_egeria_md = "commands.cat.dr_egeria_md:process_markdown_file"
    dr_egeria_jupyter = "commands.cat.dr_egeria_jupyter:process_jupyter_notebook"
    dr_egeria_help = "commands.cat.dr_egeria_command_help:main"

    list_data_structures_full = "commands.cat.list_data_structures_full:main"
    list_data_structures = "commands.cat.list_data_designer:main_structs"
    list_data_fields = "commands.cat.list_data_designer:main_fields"
    list_data_classes = "commands.cat.list_data_designer:main_classes"


    list_collections = "commands.cat.list_collections:main"

    monitor_asset_events = "commands.ops.monitor_asset_events:main"
    monitor_coco_status = "commands.ops.monitor_coco_status:main"
    monitor_engine_activity = "commands.ops.monitor_engine_activity:main_live"
    # CORRECTED: Removed trailing space
    list_engine_activity = "commands.ops.monitor_engine_activity:main_paging"
    # CORRECTED: Removed trailing space
    list_engine_activity_compressed = "commands.ops.monitor_engine_activity_c:main_paging"
    monitor_engine_activity_compressed = "commands.ops.monitor_engine_activity_c:main_live"
    refresh_gov_eng_config = "commands.ops.gov_server_actions:refresh_gov_eng_config"
    monitor_gov_eng_status = "commands.ops.monitor_gov_eng_status:main_live"
    list_gov_eng_status = "commands.ops.monitor_gov_eng_status:main_paging"
    monitor_integ_daemon_status = "commands.ops.monitor_integ_daemon_status:main_live"
    list_integ_daemon_status = "commands.ops.monitor_integ_daemon_status:main_paging"
    monitor_platform_status = "commands.ops.monitor_platform_status:main"
    monitor_server_list = "commands.ops.orig_monitor_server_list:main"
    monitor_server_startup = "commands.ops.monitor_server_startup:main"
    monitor_server_status = "commands.ops.monitor_server_status:main"
    refresh_integration_daemon = "commands.ops.refresh_integration_daemon:main"
    restart_integration_daemon = "commands.ops.restart_integration_daemon:main"
    load_archive = "commands.ops.load_archive:load_archive"
    load_archive_tui = "commands.ops.load_archive:tui"
    list_catalog_targets = "commands.ops.list_catalog_targets:main"
    start_daemon = "commands.ops.engine_actions:start_daemon"
    stop_daemon = "commands.ops.engine_actions:stop_daemon"
    list_archives = "commands.ops.list_archives:main"

    list_my_profile = "commands.my.list_my_profile:main"
    list_my_roles = "commands.my.list_my_roles:main"
    monitor_open_todos = "commands.my.monitor_open_todos:main"
    monitor_my_todos = "commands.my.monitor_my_todos:main"
    create_todo = "commands.my.todo_actions:create_todo"
    delete_todo = "commands.my.todo_actions:delete_todo"
    change_todo_status = "commands.my.todo_actions:change_todo_status"
    mark_todo_complete = "commands.my.todo_actions:mark_todo_complete"
    reassign_todo = "commands.my.todo_actions:reassign_todo"


    hey_egeria_ops = "commands.cli.egeria_ops:cli"
    hey_egeria_cat = "commands.cli.egeria_cat:cli"
    hey_egeria_tech = "commands.cli.egeria_tech:cli"
    hey_egeria_my = "commands.cli.egeria_my:cli"
    hey_egeria = "commands.cli.egeria:cli"
    egeria_login = "commands.cli.egeria_login_tui:login"

    get_guid_info = "commands.tech.get_guid_info:main"
    get_tech_details = "commands.tech.get_tech_details:main"
    list_asset_types = "commands.tech.list_asset_types:main"
    list_registered_services = "commands.tech.list_registered_services:main"
    list_relationship_types = "commands.tech.list_relationship_types:main"
    list_tech_templates = "commands.tech.list_tech_templates:main"
    get_element_info = "commands.tech.get_element_info:main"
    list_elements = "commands.tech.list_all_om_type_elements:main"
    list_elements_x = "commands.tech.list_all_om_type_elements_x:main"
    list_elements_by_classification_by_prop_value = "commands.tech.list_elements_by_classification_by_property_value:main"
    list_elements_by_prop_value = "commands.tech.list_elements_by_property_value:main"
    list_elements_by_prop_value_x = "commands.tech.list_elements_by_property_value_x:main"
    list_related_specification = "commands.tech.list_related_specification:main"
    list_elements_for_classification = "commands.tech.list_elements_for_classification:main"
    list_all_related_elements = "commands.tech.list_all_related_elements:main"
    list_related_elements_with_prop_value = "commands.tech.list_related_elements_with_prop_value:main"

    get_tech_type_template = "commands.tech.get_tech_type_template:main"
    list_relationships = "commands.tech.list_relationships:main"

    list_valid_metadata_values = "commands.tech.list_valid_metadata_values:main"
    list_anchored_elements = "commands.tech.list_anchored_elements:main"
    list_gov_action_processes = "commands.tech.list_gov_action_processes:main"

    list_info_supply_chains = "commands.tech.list_information_supply_chains:main"
    list_solution_blueprints = "commands.tech.list_solution_blueprints:main"
    list_solution_roles = "commands.tech.list_solution_roles:main"
    list_solution_components = "commands.tech.list_solution_components:main"
    delete_element = "commands.tech.generic_actions:delete_element"



[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "wheel>=0.45.1",
]

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["pyegeria", "pyegeria.*", "commands", "commands.*", "md_processing", "md_processing.*" , "examples"]
exclude = ["tests"]

[tool.setuptools.package-data]
"md_processing" = ["data/*.json", "data/*.py"]

[project.optional-dependencies]
test = ["pytest"]
